//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace webServiceExample.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CalculatorWebServiceSoapBinding", Namespace="http://calculator.calculatorwebservice.com")]
    public partial class CalculatorWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback addOperationCompleted;
        
        private System.Threading.SendOrPostCallback logOperationCompleted;
        
        private System.Threading.SendOrPostCallback modOperationCompleted;
        
        private System.Threading.SendOrPostCallback multiplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback subOperationCompleted;
        
        private System.Threading.SendOrPostCallback divOperationCompleted;
        
        private System.Threading.SendOrPostCallback calculateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CalculatorWebServiceService() {
            this.Url = global::webServiceExample.Properties.Settings.Default.webServiceExample_WebReference_CalculatorWebServiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event addCompletedEventHandler addCompleted;
        
        /// <remarks/>
        public event logCompletedEventHandler logCompleted;
        
        /// <remarks/>
        public event modCompletedEventHandler modCompleted;
        
        /// <remarks/>
        public event multiplyCompletedEventHandler multiplyCompleted;
        
        /// <remarks/>
        public event subCompletedEventHandler subCompleted;
        
        /// <remarks/>
        public event divCompletedEventHandler divCompleted;
        
        /// <remarks/>
        public event calculateCompletedEventHandler calculateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://calculator.calculatorwebservice.com", ResponseNamespace="http://calculator.calculatorwebservice.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("addReturn")]
        public double add(double x, double y) {
            object[] results = this.Invoke("add", new object[] {
                        x,
                        y});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void addAsync(double x, double y) {
            this.addAsync(x, y, null);
        }
        
        /// <remarks/>
        public void addAsync(double x, double y, object userState) {
            if ((this.addOperationCompleted == null)) {
                this.addOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddOperationCompleted);
            }
            this.InvokeAsync("add", new object[] {
                        x,
                        y}, this.addOperationCompleted, userState);
        }
        
        private void OnaddOperationCompleted(object arg) {
            if ((this.addCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCompleted(this, new addCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://calculator.calculatorwebservice.com", ResponseNamespace="http://calculator.calculatorwebservice.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("logReturn")]
        public double log(double @base, double number) {
            object[] results = this.Invoke("log", new object[] {
                        @base,
                        number});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void logAsync(double @base, double number) {
            this.logAsync(@base, number, null);
        }
        
        /// <remarks/>
        public void logAsync(double @base, double number, object userState) {
            if ((this.logOperationCompleted == null)) {
                this.logOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogOperationCompleted);
            }
            this.InvokeAsync("log", new object[] {
                        @base,
                        number}, this.logOperationCompleted, userState);
        }
        
        private void OnlogOperationCompleted(object arg) {
            if ((this.logCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logCompleted(this, new logCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://calculator.calculatorwebservice.com", ResponseNamespace="http://calculator.calculatorwebservice.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("modReturn")]
        public double mod(double dividend, double divisor) {
            object[] results = this.Invoke("mod", new object[] {
                        dividend,
                        divisor});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void modAsync(double dividend, double divisor) {
            this.modAsync(dividend, divisor, null);
        }
        
        /// <remarks/>
        public void modAsync(double dividend, double divisor, object userState) {
            if ((this.modOperationCompleted == null)) {
                this.modOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodOperationCompleted);
            }
            this.InvokeAsync("mod", new object[] {
                        dividend,
                        divisor}, this.modOperationCompleted, userState);
        }
        
        private void OnmodOperationCompleted(object arg) {
            if ((this.modCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modCompleted(this, new modCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://calculator.calculatorwebservice.com", ResponseNamespace="http://calculator.calculatorwebservice.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("multiplyReturn")]
        public double multiply(double x, double y) {
            object[] results = this.Invoke("multiply", new object[] {
                        x,
                        y});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void multiplyAsync(double x, double y) {
            this.multiplyAsync(x, y, null);
        }
        
        /// <remarks/>
        public void multiplyAsync(double x, double y, object userState) {
            if ((this.multiplyOperationCompleted == null)) {
                this.multiplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultiplyOperationCompleted);
            }
            this.InvokeAsync("multiply", new object[] {
                        x,
                        y}, this.multiplyOperationCompleted, userState);
        }
        
        private void OnmultiplyOperationCompleted(object arg) {
            if ((this.multiplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multiplyCompleted(this, new multiplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://calculator.calculatorwebservice.com", ResponseNamespace="http://calculator.calculatorwebservice.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("subReturn")]
        public double sub(double x, double y) {
            object[] results = this.Invoke("sub", new object[] {
                        x,
                        y});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void subAsync(double x, double y) {
            this.subAsync(x, y, null);
        }
        
        /// <remarks/>
        public void subAsync(double x, double y, object userState) {
            if ((this.subOperationCompleted == null)) {
                this.subOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubOperationCompleted);
            }
            this.InvokeAsync("sub", new object[] {
                        x,
                        y}, this.subOperationCompleted, userState);
        }
        
        private void OnsubOperationCompleted(object arg) {
            if ((this.subCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subCompleted(this, new subCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://calculator.calculatorwebservice.com", ResponseNamespace="http://calculator.calculatorwebservice.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("divReturn")]
        public double div(double dividend, double divisor) {
            object[] results = this.Invoke("div", new object[] {
                        dividend,
                        divisor});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void divAsync(double dividend, double divisor) {
            this.divAsync(dividend, divisor, null);
        }
        
        /// <remarks/>
        public void divAsync(double dividend, double divisor, object userState) {
            if ((this.divOperationCompleted == null)) {
                this.divOperationCompleted = new System.Threading.SendOrPostCallback(this.OndivOperationCompleted);
            }
            this.InvokeAsync("div", new object[] {
                        dividend,
                        divisor}, this.divOperationCompleted, userState);
        }
        
        private void OndivOperationCompleted(object arg) {
            if ((this.divCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.divCompleted(this, new divCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://calculator.calculatorwebservice.com", ResponseNamespace="http://calculator.calculatorwebservice.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("calculateReturn")]
        public double calculate(double x, double y, string operation) {
            object[] results = this.Invoke("calculate", new object[] {
                        x,
                        y,
                        operation});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void calculateAsync(double x, double y, string operation) {
            this.calculateAsync(x, y, operation, null);
        }
        
        /// <remarks/>
        public void calculateAsync(double x, double y, string operation, object userState) {
            if ((this.calculateOperationCompleted == null)) {
                this.calculateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncalculateOperationCompleted);
            }
            this.InvokeAsync("calculate", new object[] {
                        x,
                        y,
                        operation}, this.calculateOperationCompleted, userState);
        }
        
        private void OncalculateOperationCompleted(object arg) {
            if ((this.calculateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.calculateCompleted(this, new calculateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void addCompletedEventHandler(object sender, addCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void logCompletedEventHandler(object sender, logCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void modCompletedEventHandler(object sender, modCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void multiplyCompletedEventHandler(object sender, multiplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multiplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multiplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void subCompletedEventHandler(object sender, subCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class subCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal subCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void divCompletedEventHandler(object sender, divCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class divCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal divCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void calculateCompletedEventHandler(object sender, calculateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class calculateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal calculateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591